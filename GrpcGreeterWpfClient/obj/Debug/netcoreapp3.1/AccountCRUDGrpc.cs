// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/accountCRUD.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcGreeter.Protos {
  public static partial class AccountCRUD
  {
    static readonly string __ServiceName = "protos.accountCRUD.AccountCRUD";

    static readonly grpc::Marshaller<global::GrpcGreeter.Protos.Empty> __Marshaller_protos_empty_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Protos.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.Protos.Accounts> __Marshaller_protos_accountCRUD_Accounts = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Protos.Accounts.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.Protos.AccountFilter> __Marshaller_protos_accountCRUD_AccountFilter = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Protos.AccountFilter.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.Protos.Account> __Marshaller_protos_accountCRUD_Account = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Protos.Account.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcGreeter.Protos.Empty, global::GrpcGreeter.Protos.Accounts> __Method_GetAccounts = new grpc::Method<global::GrpcGreeter.Protos.Empty, global::GrpcGreeter.Protos.Accounts>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccounts",
        __Marshaller_protos_empty_Empty,
        __Marshaller_protos_accountCRUD_Accounts);

    static readonly grpc::Method<global::GrpcGreeter.Protos.AccountFilter, global::GrpcGreeter.Protos.Account> __Method_GetByID = new grpc::Method<global::GrpcGreeter.Protos.AccountFilter, global::GrpcGreeter.Protos.Account>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByID",
        __Marshaller_protos_accountCRUD_AccountFilter,
        __Marshaller_protos_accountCRUD_Account);

    static readonly grpc::Method<global::GrpcGreeter.Protos.Account, global::GrpcGreeter.Protos.Empty> __Method_Insert = new grpc::Method<global::GrpcGreeter.Protos.Account, global::GrpcGreeter.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Insert",
        __Marshaller_protos_accountCRUD_Account,
        __Marshaller_protos_empty_Empty);

    static readonly grpc::Method<global::GrpcGreeter.Protos.Account, global::GrpcGreeter.Protos.Empty> __Method_Update = new grpc::Method<global::GrpcGreeter.Protos.Account, global::GrpcGreeter.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_protos_accountCRUD_Account,
        __Marshaller_protos_empty_Empty);

    static readonly grpc::Method<global::GrpcGreeter.Protos.AccountFilter, global::GrpcGreeter.Protos.Empty> __Method_Delete = new grpc::Method<global::GrpcGreeter.Protos.AccountFilter, global::GrpcGreeter.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_protos_accountCRUD_AccountFilter,
        __Marshaller_protos_empty_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcGreeter.Protos.AccountCRUDReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for AccountCRUD</summary>
    public partial class AccountCRUDClient : grpc::ClientBase<AccountCRUDClient>
    {
      /// <summary>Creates a new client for AccountCRUD</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public AccountCRUDClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AccountCRUD that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public AccountCRUDClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected AccountCRUDClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected AccountCRUDClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcGreeter.Protos.Accounts GetAccounts(global::GrpcGreeter.Protos.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcGreeter.Protos.Accounts GetAccounts(global::GrpcGreeter.Protos.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccounts, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Accounts> GetAccountsAsync(global::GrpcGreeter.Protos.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Accounts> GetAccountsAsync(global::GrpcGreeter.Protos.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccounts, null, options, request);
      }
      public virtual global::GrpcGreeter.Protos.Account GetByID(global::GrpcGreeter.Protos.AccountFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcGreeter.Protos.Account GetByID(global::GrpcGreeter.Protos.AccountFilter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Account> GetByIDAsync(global::GrpcGreeter.Protos.AccountFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Account> GetByIDAsync(global::GrpcGreeter.Protos.AccountFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByID, null, options, request);
      }
      public virtual global::GrpcGreeter.Protos.Empty Insert(global::GrpcGreeter.Protos.Account request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Insert(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcGreeter.Protos.Empty Insert(global::GrpcGreeter.Protos.Account request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Insert, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> InsertAsync(global::GrpcGreeter.Protos.Account request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> InsertAsync(global::GrpcGreeter.Protos.Account request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Insert, null, options, request);
      }
      public virtual global::GrpcGreeter.Protos.Empty Update(global::GrpcGreeter.Protos.Account request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcGreeter.Protos.Empty Update(global::GrpcGreeter.Protos.Account request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> UpdateAsync(global::GrpcGreeter.Protos.Account request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> UpdateAsync(global::GrpcGreeter.Protos.Account request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::GrpcGreeter.Protos.Empty Delete(global::GrpcGreeter.Protos.AccountFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcGreeter.Protos.Empty Delete(global::GrpcGreeter.Protos.AccountFilter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> DeleteAsync(global::GrpcGreeter.Protos.AccountFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> DeleteAsync(global::GrpcGreeter.Protos.AccountFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override AccountCRUDClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AccountCRUDClient(configuration);
      }
    }

  }
}
#endregion
