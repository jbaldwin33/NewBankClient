// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/personCRUD.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcGreeter.Protos {
  public static partial class PersonCRUD
  {
    static readonly string __ServiceName = "protos.personCRUD.PersonCRUD";

    static readonly grpc::Marshaller<global::GrpcGreeter.Protos.Empty> __Marshaller_protos_empty_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Protos.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.Protos.Persons> __Marshaller_protos_personCRUD_Persons = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Protos.Persons.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.Protos.PersonFilter> __Marshaller_protos_personCRUD_PersonFilter = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Protos.PersonFilter.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcGreeter.Protos.Person> __Marshaller_protos_personCRUD_Person = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcGreeter.Protos.Person.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcGreeter.Protos.Empty, global::GrpcGreeter.Protos.Persons> __Method_GetPersons = new grpc::Method<global::GrpcGreeter.Protos.Empty, global::GrpcGreeter.Protos.Persons>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPersons",
        __Marshaller_protos_empty_Empty,
        __Marshaller_protos_personCRUD_Persons);

    static readonly grpc::Method<global::GrpcGreeter.Protos.PersonFilter, global::GrpcGreeter.Protos.Person> __Method_GetByID = new grpc::Method<global::GrpcGreeter.Protos.PersonFilter, global::GrpcGreeter.Protos.Person>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByID",
        __Marshaller_protos_personCRUD_PersonFilter,
        __Marshaller_protos_personCRUD_Person);

    static readonly grpc::Method<global::GrpcGreeter.Protos.Person, global::GrpcGreeter.Protos.Empty> __Method_Insert = new grpc::Method<global::GrpcGreeter.Protos.Person, global::GrpcGreeter.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Insert",
        __Marshaller_protos_personCRUD_Person,
        __Marshaller_protos_empty_Empty);

    static readonly grpc::Method<global::GrpcGreeter.Protos.Person, global::GrpcGreeter.Protos.Empty> __Method_Update = new grpc::Method<global::GrpcGreeter.Protos.Person, global::GrpcGreeter.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_protos_personCRUD_Person,
        __Marshaller_protos_empty_Empty);

    static readonly grpc::Method<global::GrpcGreeter.Protos.PersonFilter, global::GrpcGreeter.Protos.Empty> __Method_Delete = new grpc::Method<global::GrpcGreeter.Protos.PersonFilter, global::GrpcGreeter.Protos.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_protos_personCRUD_PersonFilter,
        __Marshaller_protos_empty_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcGreeter.Protos.PersonCRUDReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for PersonCRUD</summary>
    public partial class PersonCRUDClient : grpc::ClientBase<PersonCRUDClient>
    {
      /// <summary>Creates a new client for PersonCRUD</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PersonCRUDClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PersonCRUD that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PersonCRUDClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PersonCRUDClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PersonCRUDClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcGreeter.Protos.Persons GetPersons(global::GrpcGreeter.Protos.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPersons(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcGreeter.Protos.Persons GetPersons(global::GrpcGreeter.Protos.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPersons, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Persons> GetPersonsAsync(global::GrpcGreeter.Protos.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPersonsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Persons> GetPersonsAsync(global::GrpcGreeter.Protos.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPersons, null, options, request);
      }
      public virtual global::GrpcGreeter.Protos.Person GetByID(global::GrpcGreeter.Protos.PersonFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcGreeter.Protos.Person GetByID(global::GrpcGreeter.Protos.PersonFilter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Person> GetByIDAsync(global::GrpcGreeter.Protos.PersonFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Person> GetByIDAsync(global::GrpcGreeter.Protos.PersonFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByID, null, options, request);
      }
      public virtual global::GrpcGreeter.Protos.Empty Insert(global::GrpcGreeter.Protos.Person request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Insert(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcGreeter.Protos.Empty Insert(global::GrpcGreeter.Protos.Person request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Insert, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> InsertAsync(global::GrpcGreeter.Protos.Person request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> InsertAsync(global::GrpcGreeter.Protos.Person request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Insert, null, options, request);
      }
      public virtual global::GrpcGreeter.Protos.Empty Update(global::GrpcGreeter.Protos.Person request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcGreeter.Protos.Empty Update(global::GrpcGreeter.Protos.Person request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> UpdateAsync(global::GrpcGreeter.Protos.Person request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> UpdateAsync(global::GrpcGreeter.Protos.Person request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::GrpcGreeter.Protos.Empty Delete(global::GrpcGreeter.Protos.PersonFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcGreeter.Protos.Empty Delete(global::GrpcGreeter.Protos.PersonFilter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> DeleteAsync(global::GrpcGreeter.Protos.PersonFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcGreeter.Protos.Empty> DeleteAsync(global::GrpcGreeter.Protos.PersonFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PersonCRUDClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PersonCRUDClient(configuration);
      }
    }

  }
}
#endregion
